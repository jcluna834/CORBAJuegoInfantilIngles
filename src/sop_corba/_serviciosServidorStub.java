package sop_corba;


/**
* sop_corba/_serviciosServidorStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from requerimiento.idl
* domingo 7 de junio de 2015 12:19:24 PM COT
*/

public class _serviciosServidorStub extends org.omg.CORBA.portable.ObjectImpl implements sop_corba.serviciosServidor
{


  //edita una palabra del diccionario con el codigo ingresado
  public boolean modificarPalabra (String palabraAnterior, String palabraNueva, int codigo)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("modificarPalabra", true);
                $out.write_string (palabraAnterior);
                $out.write_string (palabraNueva);
                $out.write_long (codigo);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return modificarPalabra (palabraAnterior, palabraNueva, codigo        );
            } finally {
                _releaseReply ($in);
            }
  } // modificarPalabra


  //borra el diccionario con dicho codigo
  public boolean borrarDiccionario (int codigo)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("borrarDiccionario", true);
                $out.write_long (codigo);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return borrarDiccionario (codigo        );
            } finally {
                _releaseReply ($in);
            }
  } // borrarDiccionario


  //guarda la palabra en el diccionario con el codigo ingresado
  public boolean guardarPalabra (String palabraGuardar, int codigo)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("guardarPalabra", true);
                $out.write_string (palabraGuardar);
                $out.write_long (codigo);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return guardarPalabra (palabraGuardar, codigo        );
            } finally {
                _releaseReply ($in);
            }
  } // guardarPalabra


  //carga un diccionario desde la ubicacion ingresada y retorna el codigo del diccionario
  public int generarDiccionario (String ubicacion)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("generarDiccionario", true);
                $out.write_string (ubicacion);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return generarDiccionario (ubicacion        );
            } finally {
                _releaseReply ($in);
            }
  } // generarDiccionario


  //obtiene una palabra de manera aleatorio entre todos los diccionarios
  public String getPalabraAletoria ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getPalabraAletoria", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getPalabraAletoria (        );
            } finally {
                _releaseReply ($in);
            }
  } // getPalabraAletoria


  //recibe una palabra y un codigo de palabra, retorna true si el codigo pertenece a la misma palabra ingresada
  public boolean validarImagen (String palabra, int codigo)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("validarImagen", true);
                $out.write_string (palabra);
                $out.write_long (codigo);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return validarImagen (palabra, codigo        );
            } finally {
                _releaseReply ($in);
            }
  } // validarImagen


  //obtiene la palabra que pertence al codigo ingresado
  public String getPalabra (int codigo)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getPalabra", true);
                $out.write_long (codigo);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getPalabra (codigo        );
            } finally {
                _releaseReply ($in);
            }
  } // getPalabra


  //agrega un estudiante a la lista de estudiantes ingresados
  public boolean addEstudiante (sop_corba.estudianteCllbck estudiante)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addEstudiante", true);
                sop_corba.estudianteCllbckHelper.write ($out, estudiante);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addEstudiante (estudiante        );
            } finally {
                _releaseReply ($in);
            }
  } // addEstudiante


  //elimina un estudiante de la lista de estudiantes ingresados
  public boolean deleteEstudiante (sop_corba.estudianteCllbck estudiante)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("deleteEstudiante", true);
                sop_corba.estudianteCllbckHelper.write ($out, estudiante);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return deleteEstudiante (estudiante        );
            } finally {
                _releaseReply ($in);
            }
  } // deleteEstudiante


  //busca una palabra en ingles y retorna su significado en espa√±ol
  public String buscarPalabra (String palabraIngles)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("buscarPalabra", true);
                $out.write_string (palabraIngles);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return buscarPalabra (palabraIngles        );
            } finally {
                _releaseReply ($in);
            }
  } // buscarPalabra


  //establece una conexion entre los estudiantes a medida que se vayan agregado al juego
  public void iniciarCompletaLetra (sop_corba.estudianteCllbck estudiante)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("iniciarCompletaLetra", true);
                sop_corba.estudianteCllbckHelper.write ($out, estudiante);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                iniciarCompletaLetra (estudiante        );
            } finally {
                _releaseReply ($in);
            }
  } // iniciarCompletaLetra

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:sop_corba/serviciosServidor:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _serviciosServidorStub
