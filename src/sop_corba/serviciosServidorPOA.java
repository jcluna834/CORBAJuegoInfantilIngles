package sop_corba;


/**
* sop_corba/serviciosServidorPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from requerimiento.idl
* domingo 7 de junio de 2015 12:19:24 PM COT
*/

public abstract class serviciosServidorPOA extends org.omg.PortableServer.Servant
 implements sop_corba.serviciosServidorOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("modificarPalabra", new java.lang.Integer (0));
    _methods.put ("borrarDiccionario", new java.lang.Integer (1));
    _methods.put ("guardarPalabra", new java.lang.Integer (2));
    _methods.put ("generarDiccionario", new java.lang.Integer (3));
    _methods.put ("getPalabraAletoria", new java.lang.Integer (4));
    _methods.put ("validarImagen", new java.lang.Integer (5));
    _methods.put ("getPalabra", new java.lang.Integer (6));
    _methods.put ("addEstudiante", new java.lang.Integer (7));
    _methods.put ("deleteEstudiante", new java.lang.Integer (8));
    _methods.put ("buscarPalabra", new java.lang.Integer (9));
    _methods.put ("iniciarCompletaLetra", new java.lang.Integer (10));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  //edita una palabra del diccionario con el codigo ingresado
       case 0:  // sop_corba/serviciosServidor/modificarPalabra
       {
         String palabraAnterior = in.read_string ();
         String palabraNueva = in.read_string ();
         int codigo = in.read_long ();
         boolean $result = false;
         $result = this.modificarPalabra (palabraAnterior, palabraNueva, codigo);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }


  //borra el diccionario con dicho codigo
       case 1:  // sop_corba/serviciosServidor/borrarDiccionario
       {
         int codigo = in.read_long ();
         boolean $result = false;
         $result = this.borrarDiccionario (codigo);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }


  //guarda la palabra en el diccionario con el codigo ingresado
       case 2:  // sop_corba/serviciosServidor/guardarPalabra
       {
         String palabraGuardar = in.read_string ();
         int codigo = in.read_long ();
         boolean $result = false;
         $result = this.guardarPalabra (palabraGuardar, codigo);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }


  //carga un diccionario desde la ubicacion ingresada y retorna el codigo del diccionario
       case 3:  // sop_corba/serviciosServidor/generarDiccionario
       {
         String ubicacion = in.read_string ();
         int $result = (int)0;
         $result = this.generarDiccionario (ubicacion);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }


  //obtiene una palabra de manera aleatorio entre todos los diccionarios
       case 4:  // sop_corba/serviciosServidor/getPalabraAletoria
       {
         String $result = null;
         $result = this.getPalabraAletoria ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }


  //recibe una palabra y un codigo de palabra, retorna true si el codigo pertenece a la misma palabra ingresada
       case 5:  // sop_corba/serviciosServidor/validarImagen
       {
         String palabra = in.read_string ();
         int codigo = in.read_long ();
         boolean $result = false;
         $result = this.validarImagen (palabra, codigo);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }


  //obtiene la palabra que pertence al codigo ingresado
       case 6:  // sop_corba/serviciosServidor/getPalabra
       {
         int codigo = in.read_long ();
         String $result = null;
         $result = this.getPalabra (codigo);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }


  //agrega un estudiante a la lista de estudiantes ingresados
       case 7:  // sop_corba/serviciosServidor/addEstudiante
       {
         sop_corba.estudianteCllbck estudiante = sop_corba.estudianteCllbckHelper.read (in);
         boolean $result = false;
         $result = this.addEstudiante (estudiante);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }


  //elimina un estudiante de la lista de estudiantes ingresados
       case 8:  // sop_corba/serviciosServidor/deleteEstudiante
       {
         sop_corba.estudianteCllbck estudiante = sop_corba.estudianteCllbckHelper.read (in);
         boolean $result = false;
         $result = this.deleteEstudiante (estudiante);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }


  //busca una palabra en ingles y retorna su significado en espa√±ol
       case 9:  // sop_corba/serviciosServidor/buscarPalabra
       {
         String palabraIngles = in.read_string ();
         String $result = null;
         $result = this.buscarPalabra (palabraIngles);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }


  //establece una conexion entre los estudiantes a medida que se vayan agregado al juego
       case 10:  // sop_corba/serviciosServidor/iniciarCompletaLetra
       {
         sop_corba.estudianteCllbck estudiante = sop_corba.estudianteCllbckHelper.read (in);
         this.iniciarCompletaLetra (estudiante);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:sop_corba/serviciosServidor:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public serviciosServidor _this() 
  {
    return serviciosServidorHelper.narrow(
    super._this_object());
  }

  public serviciosServidor _this(org.omg.CORBA.ORB orb) 
  {
    return serviciosServidorHelper.narrow(
    super._this_object(orb));
  }


} // class serviciosServidorPOA
